@using ControleDeGastos.ApplicationCore.Entities
@using ControleDeGastos.ApplicationCore.Enum
@model Entries
@{
    ViewData["Title"] = "Entry";
    Layout = "_Layout";
    //TODO - Formatar o campo value como moeda   
}

<h3 class="page-heading mb-4">Entry</h3>
<div class="row mb-2">
    <div class="col-lg-6">

        <div class="card">
            <div class="card-header">
                <h5>Information</h5>
            </div>
            <div class="card-body">
                <div asp-validation-summary="ModelOnly"></div>
                <form asp-controller="Entries" asp-action="AddOrEdit" method="post">
                    <input asp-for="Id" class="form-control" value="@(Model != null ? Model.Id:0)" hidden readonly>
                    <div class="form-group">
                        <label asp-for="Description" class="col-form-label"></label>
                        <input asp-for="Description" class="form-control" />

                    </div>
                    <div class="form-group">
                        <label asp-for="Value" class="col-form-label"></label>
                        <input asp-for="Value" type="text" class="form-control money2" required />
                    </div>

                    <div class="form-group">
                        <label asp-for="Recurrence" class="col-form-label"></label>
                        <select asp-for="Recurrence" class="form-select mb-3" aria-label="Recurrence" required>
                            <option selected>Select Recurrence</option>
                            @for (int i = 0; i <= RecurrentConstant.GetCountItems(); i++)
                            {
                                <option value="@i">@RecurrentConstant.GetDescription(i)</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label asp-for="Status" class="col-form-label"></label>
                        <select asp-for="Status" class="form-select mb-3" aria-label="Status" required>
                            <option selected>Select Status</option>
                            @for (int i = 1; i <= StatusEntryConstant.GetCountItems(); i++)
                            {
                                <option value="@i">@StatusEntryConstant.GetDescription(i)</option>
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label asp-for="CategoryId" class="col-form-label"></label>
                        <select asp-for="CategoryId" class="form-select mb-3" aria-label="CategoryId" asp-items="@ViewBag.Categories" required>
                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                        </select>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-12">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <a href="@(Url.Action("Index","Entries"))" class="btn btn-danger">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>



    </div>
</div>

